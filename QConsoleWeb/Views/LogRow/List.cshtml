@model LogRowViewModel
@using QConsoleWeb.Components



<div class="text-center">
    <h5>Аудит операций</h5>
</div>


<div asp-validation-summary="All" class="text-danger"></div>
<form asp-action="List" asp-route-subquery=@Model.SubQuery method="get" class="form-row row">
    <div class="form-group">
        <label asp-for="DateFrom"></label>
        <div><span asp-validation-for="DateFrom" class="text-danger"></span></div>
        <input asp-for="DateFrom" type="date" class="form-control form-control-sm"/>
    </div>

    <div class="form-group">
        <label  asp-for="DateTo"></label>
        <div><span asp-validation-for="DateTo" class="text-danger"></span></div>
        <input asp-for="DateTo" type="date" class="form-control form-control-sm"/>
    </div>

    <div class="form-group">
        <label @*class="sr-only"*@ asp-for="SubQuery"></label>
        <div><span asp-validation-for="SubQuery" class="text-danger"></span></div>
        <div class="form-inline">
            <input asp-for="SubQuery" class="form-control form-control-sm SubQueryId" id="SubQueryId" placeholder="Дополнительные условия" />
            <button class="btn btn-outline-secondary btn-sm" type="submit">Применить</button>
        </div>
    </div>
</form>

<div class="row">
    <div class="col">
        @(await Component.InvokeAsync<PagerViewComponent>(Model.PagedLogRows))
    </div>
    <div class="col">

    </div>

</div>
<div >
    <table class="table table-striped table-sm table-hover text-nowrap">
        <thead class="thead-dark">
            <tr>
                @*<th></th>*@
                <th>#</th>
                <th>gid</th>
                <th>Операция</th>
                <th>Пользователь</th>
                <th>Адрес</th>
                <th>Дата изм.</th>
                <th>Схема</th>
                <th>Таблица</th>
                <th>gidnum</th>
                <th>Содержание</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{var i = 1;}
            @foreach (var p in Model.PagedLogRows.Results)
            {
                var rowNo = (Model.PagedLogRows.CurrentPage - 1) * Model.PagedLogRows.PageSize + i;
                i++;
            <tr class="ButtonClass" onclick="location.href = '@(Url.Action("LogRowHistory", "LogRow", new { gid = @p.Gid }))'">
                @*<td><a asp-action="LogRowHistory" asp-controller="LogRow" asp-route-gid=@p.Gid>Детали</a></td>*@
                <td>@rowNo</td>
                <td>@p.Gid</td>
                <td>@p.Action</td>
                <td>@p.Username</td>
                <td>@p.Address</td>
                <td>@p.Timechange</td>
                <td>@p.Tableschema</td>
                <td>@p.Tablename</td>
                <td>@p.Gidnum</td>
                <td class="text"><span>@p.Context</span></td>
            </tr>
            }
        </tbody>
    </table>
</div>
@(await Component.InvokeAsync<PagerViewComponent>(Model.PagedLogRows))

